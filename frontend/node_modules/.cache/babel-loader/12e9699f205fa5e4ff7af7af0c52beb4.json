{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nelly\\\\Downloads\\\\App-creci-\\\\frontend\\\\src\\\\pantallas\\\\PantallaContactos\\\\PantallaContactos.js\";\nimport React, { useState } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet, ScrollView, TouchableOpacity, Alert } from 'react-native';\nconst PantallaContactos = () => {\n  const [contactos, setContactos] = useState([]);\n  const [nuevoContacto, setNuevoContacto] = useState('');\n\n  // Función para agregar un nuevo contacto\n  const agregarContacto = () => {\n    if (nuevoContacto) {\n      setContactos([...contactos, nuevoContacto]);\n      setNuevoContacto('');\n    } else {\n      Alert.alert('Error', 'Por favor ingresa un nombre de contacto');\n    }\n  };\n\n  // Función para enviar mensaje a un contacto a través de WhatsApp\n  const enviarMensaje = contacto => {\n    Alert.alert('Mensaje', `Enviando mensaje a ${contacto} por WhatsApp`);\n    // Aquí integrarías la lógica para enviar mensaje a través de la API de WhatsApp\n  };\n  return /*#__PURE__*/React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Mis Contactos\"), /*#__PURE__*/React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Ingresa el nombre del contacto\",\n    value: nuevoContacto,\n    onChangeText: setNuevoContacto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    title: \"Agregar Contacto\",\n    onPress: agregarContacto,\n    color: \"#FF4081\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ScrollView, {\n    contentContainerStyle: styles.scrollContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, contactos.map((contacto, index) => /*#__PURE__*/React.createElement(TouchableOpacity, {\n    key: index,\n    style: styles.contactCard,\n    onPress: () => enviarMensaje(contacto),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: styles.contactName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, contacto), /*#__PURE__*/React.createElement(Text, {\n    style: styles.contactAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Enviar mensaje\")))));\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFF',\n    padding: 20\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#FF4081',\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    borderColor: '#FF4081',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingLeft: 10,\n    marginRight: 10\n  },\n  scrollContainer: {\n    paddingBottom: 40\n  },\n  contactCard: {\n    backgroundColor: '#FFEBEE',\n    padding: 15,\n    marginBottom: 15,\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  contactName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#FF4081'\n  },\n  contactAction: {\n    fontSize: 16,\n    color: '#333',\n    marginTop: 5\n  }\n});\nexport default PantallaContactos;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","ScrollView","TouchableOpacity","Alert","PantallaContactos","contactos","setContactos","nuevoContacto","setNuevoContacto","agregarContacto","alert","enviarMensaje","contacto","createElement","style","styles","container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","header","inputContainer","input","placeholder","value","onChangeText","title","onPress","color","contentContainerStyle","scrollContainer","map","index","key","contactCard","contactName","contactAction","create","flex","backgroundColor","padding","fontSize","fontWeight","textAlign","marginBottom","flexDirection","alignItems","height","borderColor","borderWidth","borderRadius","paddingLeft","marginRight","paddingBottom","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","marginTop"],"sources":["C:/Users/nelly/Downloads/App-creci-/frontend/src/pantallas/PantallaContactos/PantallaContactos.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet, ScrollView, TouchableOpacity, Alert } from 'react-native';\r\n\r\nconst PantallaContactos = () => {\r\n  const [contactos, setContactos] = useState([]);\r\n  const [nuevoContacto, setNuevoContacto] = useState('');\r\n\r\n  // Función para agregar un nuevo contacto\r\n  const agregarContacto = () => {\r\n    if (nuevoContacto) {\r\n      setContactos([...contactos, nuevoContacto]);\r\n      setNuevoContacto('');\r\n    } else {\r\n      Alert.alert('Error', 'Por favor ingresa un nombre de contacto');\r\n    }\r\n  };\r\n\r\n  // Función para enviar mensaje a un contacto a través de WhatsApp\r\n  const enviarMensaje = (contacto) => {\r\n    Alert.alert('Mensaje', `Enviando mensaje a ${contacto} por WhatsApp`);\r\n    // Aquí integrarías la lógica para enviar mensaje a través de la API de WhatsApp\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Mis Contactos</Text>\r\n\r\n      {/* Campo para agregar nuevo contacto */}\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Ingresa el nombre del contacto\"\r\n          value={nuevoContacto}\r\n          onChangeText={setNuevoContacto}\r\n        />\r\n        <Button title=\"Agregar Contacto\" onPress={agregarContacto} color=\"#FF4081\" />\r\n      </View>\r\n\r\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n        {contactos.map((contacto, index) => (\r\n          <TouchableOpacity\r\n            key={index}\r\n            style={styles.contactCard}\r\n            onPress={() => enviarMensaje(contacto)}\r\n          >\r\n            <Text style={styles.contactName}>{contacto}</Text>\r\n            <Text style={styles.contactAction}>Enviar mensaje</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#FFF',\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#FF4081',\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  inputContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    height: 40,\r\n    borderColor: '#FF4081',\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    paddingLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n  scrollContainer: {\r\n    paddingBottom: 40,\r\n  },\r\n  contactCard: {\r\n    backgroundColor: '#FFEBEE',\r\n    padding: 15,\r\n    marginBottom: 15,\r\n    borderRadius: 10,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  contactName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#FF4081',\r\n  },\r\n  contactAction: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n    marginTop: 5,\r\n  },\r\n});\r\n\r\nexport default PantallaContactos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}